services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000" # Проброс порта для прямого доступа к бэкенду (для отладки)
    volumes:
      - images:/app/images # Монтируем volume для изображений
      - logs:/app/logs     # Монтируем volume для логов
    restart: always # Автоматический перезапуск при сбое
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_NAME=images_db
      - DB_USER=postgres
      - DB_PASSWORD=password

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: images_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always

  nginx:
    image: nginx:latest # Используем официальный образ Nginx
    ports:
      - "8080:80" # Nginx будет доступен на порту 8080 хост-машины
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Монтируем наш nginx.conf
      - images:/app/images:ro # Монтируем volume с изображениями в Nginx (только для чтения)
      - ./static:/app/static:ro # Монтируем статические файлы для Nginx (только для чтения)
    depends_on:
      - app # Nginx зависит от сервиса 'app'
    restart: always

volumes:
  images: # Определяем volume для изображений
  logs:   # Определяем volume для логов
  db_data: # Определяем volume для данных базы данных